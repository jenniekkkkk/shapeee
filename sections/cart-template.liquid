import { store } from './../shared/cartData.js'; if (document.querySelector('.cart-form')) { let productForm = new Vue({
el: '.cart-form', delimiters: ['${', '}'], data() { return { cartData: store.state.cartData, }; }, computed: { cart() {
return this.cartData[0]; }, }, created() { // mini cart is on every page, that's why, we cal it once here
store.getCart(); }, mounted() { console.log(this.cartData); this.getCart(); }, methods: { getCart() { axios
.get('/cart.js') .then((response) => { console.log(response.data); // 输出购物车数据到控制台 this.cart = response.data;
// 检查是否正确设置了 cart }) .catch((error) => { new Noty({ type: 'error', layout: 'topRight', text: 'An error occurred
while loading the cart!', }).show(); }); }, updateCart() { let updates = this.cart.items.reduce((acc, item) => ({
...acc, [item.variant_id]: item.quantity }), {}); axios .post('/cart/update.js', { updates }) .then((response) => {
this.cart = response.data; // 更新购物车数据 new Noty({ type: 'success', timeout: 3000, layout: 'topRight', text: 'Your
cart items have been updated', }).show(); }) .catch((error) => { new Noty({ type: 'error', layout: 'topRight', text:
'There was an error updating the cart!', }).show(); }); }, }, filters: { money(value) { return `$${(value /
100).toFixed(2)}`; // 确保是数字格式 }, }, }); }
